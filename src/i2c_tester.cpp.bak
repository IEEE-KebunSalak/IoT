
/*
    I2C Tester
*/

// #include <SPI.h>
// #include <Wire.h>
// #include <DFRobot_SHT20.h>

// #define GRAVITY_ADDRESS 0x23

// uint8_t buf[4] = {0};
// uint16_t data;

// uint8_t readReg(uint8_t reg, const void *pBuf, size_t size);
// float gravity();

// DFRobot_SHT20 sht20(&Wire, SHT20_I2C_ADDR);

// void setup()
// {
//     Serial.begin(9600);
//     Wire.begin();
//     sht20.initSHT20();
// }

// void loop()
// {
//     Serial.print("Temperature: ");
//     Serial.print(sht20.readTemperature());
//     Serial.println(" C");

//     Serial.print("Humidity: ");
//     Serial.print(sht20.readHumidity());
//     Serial.println(" %");

//     Serial.print("Lux: ");
//     Serial.print(gravity());

//     delay(1000);
// }

// float gravity()
// {
//     readReg(0x10, buf, 2);
//     data = buf[0] << 8 | buf[1];
//     return (((float)data) / 1.2);
// }

// uint8_t readReg(uint8_t reg, const void *pBuf, size_t size)
// {
//     if (pBuf == NULL)
//     {
//         Serial.println("pBuf ERROR!! : null pointer");
//     }
//     uint8_t *_pBuf = (uint8_t *)pBuf;
//     Wire.beginTransmission(GRAVITY_ADDRESS);
//     Wire.write(&reg, 1);
//     if (Wire.endTransmission() != 0)
//     {
//         return 0;
//     }
//     delay(20);
//     Wire.requestFrom(GRAVITY_ADDRESS, size);
//     for (uint16_t i = 0; i < size; i++)
//     {
//         _pBuf[i] = Wire.read();
//     }
//     return size;
// }
